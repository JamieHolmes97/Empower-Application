datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id               String            @id @default(cuid())
  email            String            @unique
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  password         Password?
  financialDetails FinancialDetails?
  budgets          Budget[]
  messages         Message[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model FinancialDetails {
  id      String @id @default(cuid())
  balance Int
  income  Int
  savings Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationship to the user
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Budget {
  id          String     @id @default(cuid())
  name        String
  totalAmount Float
  duration    Int
  user        User       @relation(fields: [userId], references: [id])
  userId      String
  categories  Category[]
  expenses    Expense[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Category {
  id            String    @id @default(cuid())
  name          String
  amount        Float
  amountUpdated Float     @default(0)
  budget        Budget    @relation(fields: [budgetId], references: [id])
  budgetId      String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  Expense       Expense[]
}

model Expense {
  id          String   @id @default(cuid())
  description String
  amount      Float
  category    Category @relation(fields: [categoryId], references: [id])
  categoryId  String
  budget      Budget   @relation(fields: [budgetId], references: [id])
  budgetId    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Message {
  id         String   @id @default(cuid())
  name       String
  university String
  message    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id])
  userId     String
}
